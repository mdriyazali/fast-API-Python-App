name: FastAPI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t fastapi-app:latest .
          
      # Step 4: Log in to DockerHub (optional, if pushing to DockerHub)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      # Step 5: Push Docker image to DockerHub (optional, if using DockerHub)
      - name: Push Docker image to DockerHub
        run: |
          docker tag fastapi-app:latest mdriyazali254362028/fastapi-app:latest
          docker push mdriyazali254362028/fastapi-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job runs before deploy

    steps:
      # Step 1: Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Kubernetes CLI (kubectl)
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3

      # Step 3: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

  # Optional: Rollback job in case of deployment failure
  rollback:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()  # Trigger only if the deploy job fails

    steps:
      # Step 1: Rollback deployment
      - name: Rollback Kubernetes deployment
        run: |
          kubectl rollout undo deployment/fastapi-app
